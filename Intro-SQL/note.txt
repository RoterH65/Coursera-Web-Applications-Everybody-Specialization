# Relational Database Design
    ## Database Design
        - Database design is an art form of its own with particular skill  and experience
        - Our goal is to avoid the really bad mistake and design clean and easily understood databases
        - Others may performance tune things later
        - Database design starts with picture....
    ## Building a Data Model
        - Drawing a picture of the data objects for our application and then figuring out how to represent the objects and their relationships
        - Basic rule: Don't put the same string data in twice - use a relationship instead 
        - When  there is one thing in the "real word" there should only be one copy of that thing in the database  
    ## Relational Power
        - By removing the replicated data and replacing it with references to a single copy of each bit of data, 
          we build a web of information that the relational database can read through very quickly - even for vey large amounts of data
        - Often when you wants some data it comes from a number of tables linked by these foreign keys.
    ## Many-to-Many
        - Sometimes we need to model a relationship that is many to many
        - We need to add a "connection" table with two foreign keys
        - There is usually no separate primary key.
# Normalization and Foreign Keys
    ## Database Normalization (3NF)
        - There is *tons* of database theory - way too much to understand without excessive predicate calculus
            - Do you replicate data. Instead, reference data. Point at data
            - Use integers of keys and for references
            - Add a special "key" column to each table, which you will make references to   
        - Three kind of keys
            - Primary key: generally an integer auto-increment field
                - Rules - best practices:
                    + Never use your logical key as the primary key
                    + Logical keys can and do change, albeit slowly
                    + Relationships that are based on matching string fields are less efficient than integers
            - Logical key: what the outside world uses for lookup
            - Foreign key: generally an integer key pointing to a row in another table
                + A Foreign key is when a table has a column containing a key that points to the primary key of another table
                + When all primary keys are integers, then all foreign keys are integer. This is good - very good.

